# MAKING THE CHROMIUM BRANCH

# Find the appropriate SHAs from the previous branch
Commit before first (80be7c815b015808bca11ef45cb54eb5ce2f34b0) : https://github.com/turtlebrowser/chromium/commit/80be7c815b015808bca11ef45cb54eb5ce2f34b0
First branch commit (74bcb7c4bc8dbb689af74e3e46ea91e645c7f418) : https://github.com/turtlebrowser/chromium/commit/74bcb7c4bc8dbb689af74e3e46ea91e645c7f418
Last branch commit  (1e39c7ef2481f67739393523854a60442b378b34) : https://github.com/turtlebrowser/chromium/commit/1e39c7ef2481f67739393523854a60442b378b34

# Get the previous branch
# git checkout turtlebrowser_integration_chromium_84.0.4147.135_qt_5.15.2
git clone --depth 1 -b turtlebrowser_integration_chromium_84.0.4147.135_qt_5.15.2 git@github.com:turtlebrowser/chromium.git
cd chromium
git fetch --unshallow

# Get the commit log <Chromium tag>..<Last branch commit>
git log --ancestry-path 80be7c815b015808bca11ef45cb54eb5ce2f34b0..1e39c7ef2481f67739393523854a60442b378b34 --pretty=format:"git cherry-pick --strategy=recursive -X patience %h%x09 # %ae%x09%ad%x09%s" > commit_log.txt

# Get the cherry pick log (reverse commit log)
tac commit_log.txt > cherry_pick_log.txt

# Make it a script: turtlebrowser_readme.txt

#!/bin/bash
set -e
# Based on branch: turtlebrowser_integration_chromium_84.0.4147.135_qt_5.15.2

# Find the tag: https://chromereleases.googleblog.com/search/label/Stable%20updates
# Check out the tag
# Closest release for (85.0.4183.121) : https://chromereleases.googleblog.com/2020/09/stable-channel-update-for-desktop_21.html
git fetch --tags
git checkout tags/85.0.4183.121

# Make the new branch
git checkout -b turtlebrowser_integration_85.0.4183.121_testing

# Edit turtlebrowser_readme.txt if needed (Remove all DEPS + .gitignore + adding of modules + docs : these have to be done by hand, see below)
# Fix the DEPS file (use_relative_paths = True and remove "src/")

# Skip : GClient: config
# gclient config git@github.com:turtlebrowser/chromium.git
# Set managed to False:
# nano .gclient

# GClient: get DEPS
export PATH="$PATH:${HOME}/Code/depot_tools"
gclient sync --with_branch_heads --with_tags -vvv

Might be useful for windows:
https://chromium.googlesource.com/chromium/src/+/HEAD/docs/win_cross.md

# Make sure the Chromium tag is sane
cd chromium
gclient runhooks
gn gen out/Default
autoninja -C out/Default chrome

# If you need new patches from Qt - for a Qt release
git remote add qt https://code.qt.io/qt/qtwebengine-chromium.git
git fetch qt
git cherry-pick -Xsubtree=chromium --strategy=recursive -X patience SHA

# Remove all the modules we need from .gitignore
bash turtlebrowser_prep_branch.sh
git add <git ignores>
git commit -m "Unignore modules"

# Add every module that we will patch
git add .
git commit -m "Add all modules"

# Push the branch 
git push -u origin turtlebrowser_integration_85.0.4183.121_testing

# Test build chromium

# Apply the patches - Also look at Qts branches
cp ../turtlebrowser_readme.txt turtlebrowser_readme.sh && bash turtlebrowser_readme.sh

# NOTE: Which files are in a commit?
git show  --name-only --format="" f793ac8396ba9

# Push the branch
git push -u origin turtlebrowser_integration_85.0.4183.121_testing

# Test build within qt-everywhere-src-5.15.2 and with chromium

# Notes:
# export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig/
# sudo apt install xcb-proto
# sudo apt install python-xcbgen
